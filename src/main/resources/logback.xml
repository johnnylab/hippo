<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="true" scanPeriod="30 seconds">
	<property name="LOG_DIR" value="/mnt/logs" />
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH} [%level] - %m%n</pattern>
		</encoder>
	</appender>
	<appender name="FILE" class="ch.qos.logback.core.FileAppender">
		<file>${LOG_DIR}/log.txt</file>
		<encoder>
			<pattern>%d{HH:mm:ss} [%thread] %-5level %logger{35} - %msg%n
			</pattern>
		</encoder>
	</appender>
	<appender name="DRFILE" class= "ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 支持多JVM同时操作同一个日志文件 -->
        <prudent>true</prudent>
        <!-- 按天来回滚，如果需要按小时来回滚，则设置为{yyyy-MM-dd_HH} -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
             <fileNamePattern>/opt/log/testC.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
             <!-- 如果按天来回滚，则最大保存时间为1天，1天之前的都将被清理掉 -->
             <maxHistory>30</maxHistory>
             <!-- 按时间回滚的同时，按文件大小来回滚 -->
             <timeBasedFileNamingAndTriggeringPolicy
                  class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                  <maxFileSize>100MB</maxFileSize>
             </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
       
        <!-- 日志输出格式 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
             <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36}
                 -%msg%n</Pattern>
        </layout>
</appender>
	
	<appender name="async_file" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>2048</queueSize>
		<appender-ref ref="FILE" />
	</appender>
	<appender name="async_console" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>2048</queueSize>
		<appender-ref ref="STDOUT" />
	</appender>
	<root level="info">
		<appender-ref ref="async_file" />
		<appender-ref ref="STDOUT" />
	</root>
</configuration>